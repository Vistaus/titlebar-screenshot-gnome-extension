#!/usr/bin/env gjs

/* preferences-standalone
 *
 * Copyright © 2021 John-Mark Allen & Titlebar Screenshot collaborators
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the “Software”), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * SPDX-License-Identifier: MIT OR GPL-2.0-only
 *
 * Licensed under either MIT (above) or GPL version 2 (attached) licenses, at
 * your option.
 */

imports.gi.versions.Gtk = "3.0";

const { GLib, Gio, Gtk } = imports.gi;
const System = imports.system;

if (ARGV.length < 1) {
  log("Error: Must provide extension UUID as an argument");
  System.exit(1);
}

globalThis.Uuid = ARGV[0];
globalThis.Imports = imports;

imports.searchPath.unshift(".");
const PrefsWidget = imports.prefs_widget.PrefsWidget

const SchemaId = "org.gnome.shell.extensions.titlebar-screenshot";

let app = new Gtk.Application({ application_id: SchemaId });

app.connect("activate", () => {
  const gschema = Gio.SettingsSchemaSource.new_from_directory(
    `${GLib.get_current_dir()}/schemas`,
    Gio.SettingsSchemaSource.get_default(),
    false,
  );
  const gsettings = new Gio.Settings({
    settings_schema: gschema.lookup(SchemaId, true),
  });

  let window = new Gtk.ApplicationWindow({
    application: app,
    title: "Titlebar Screenshot",
  });
  let prefs = new PrefsWidget(gsettings);
  window.add(prefs);
  window.show_all();
});

app.run([]);
